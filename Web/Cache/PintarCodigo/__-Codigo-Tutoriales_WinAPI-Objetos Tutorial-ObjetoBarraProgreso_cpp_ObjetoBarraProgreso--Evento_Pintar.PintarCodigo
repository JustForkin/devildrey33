<div class='Codigo_Marco' id='IDEvento_Pintar'><div class='Codigo_Titulo'>Archivo : ObjetoBarraProgreso.h</div><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'>LRESULT ObjetoBarraProgreso::Evento_Pintar(HDC hDC, PAINTSTRUCT &PS) {</span></div><div l=2><span class='TxtNegro'>    RECT    RC;</span></div><div l=3><span class='TxtNegro'>    GetClientRect(_hWnd, &RC);</span></div><div l=4><span class='TxtNegro'>    <span class='TxtVerde'>// 1 - Creaci√≥n de un buffer para el pintado</span></span></div><div l=5><span class='TxtNegro'>    HDC     Buffer     = CreateCompatibleDC(hDC);</span></div><div l=6><span class='TxtNegro'>    HBITMAP Bmp        = CreateCompatibleBitmap(hDC, RC.right, RC.bottom);</span></div><div l=7><span class='TxtNegro'>    HBITMAP Viejo      = <span class='TxtAzul'>static_cast</span>&lt;HBITMAP&gt;(SelectObject(Buffer, Bmp));</span></div><div l=8><span class='TxtNegro'>    HRGN    Region     = CreateRoundRectRgn(<span class='TxtRojo'>0</span>, <span class='TxtRojo'>0</span>, RC.right, RC.bottom, REDONDEAMIENTO, REDONDEAMIENTO);</span></div><div l=9><span class='TxtNegro'>    HFONT   VFuente    = NULL;</span></div><div l=10><span class='TxtNegro'>    RECT    Degradado  = { RC.left + <span class='TxtRojo'>2</span>, RC.top +<span class='TxtRojo'>2</span>, RC.right -<span class='TxtRojo'>4</span>, RC.bottom -<span class='TxtRojo'>4</span> };</span></div><div l=11><span class='TxtNegro'>    <span class='TxtAzul'>float</span>   Parte      = <span class='TxtRojo'>0</span>.<span class='TxtRojo'>0</span>f;</span></div><div l=12><span class='TxtNegro'>    <span class='TxtAzul'>bool</span>    EsVertical = (RC.right &lt; RC.bottom);</span></div><div l=13><span class='TxtNegro'></span></div><div l=14><span class='TxtNegro'>    <span class='TxtVerde'>// 2 -Calculamos los pixeles necesarios por cada parte </span></span></div><div l=15><span class='TxtNegro'>    <span class='TxtAzul'>float</span> TotalValores = <span class='TxtRojo'>0</span>.<span class='TxtRojo'>0</span>f;</span></div><div l=16><span class='TxtNegro'>    <span class='TxtAzul'>if</span> (EsVertical == <span class='TxtAzul'>true</span>) { </span></div><div l=17><span class='TxtNegro'>        <span class='TxtVerde'>// (RC.bottom - 4)          = Alto utilizable en pixeles del control</span></span></div><div l=18><span class='TxtNegro'>        <span class='TxtVerde'>// (_Maximo - _Minimo)      = Total de valores a recorrer</span></span></div><div l=19><span class='TxtNegro'>        <span class='TxtVerde'>// (Alto / Total varlores)  = Parte por valor</span></span></div><div l=20><span class='TxtNegro'>        <span class='TxtAzul'>float</span> AltoU = <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>float</span>&gt;(RC.bottom - <span class='TxtRojo'>4</span>);</span></div><div l=21><span class='TxtNegro'>        TotalValores = (_Maximo - _Minimo);</span></div><div l=22><span class='TxtNegro'>        <span class='TxtAzul'>if</span> (TotalValores &gt; AltoU) Parte = TotalValores / AltoU;</span></div><div l=23><span class='TxtNegro'>        <span class='TxtAzul'>else</span>                      Parte = AltoU / TotalValores;</span></div><div l=24><span class='TxtNegro'>        Degradado.top = Degradado.bottom - <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>int</span>&gt;(Parte * (_Valor - _Minimo));</span></div><div l=25><span class='TxtNegro'>    }</span></div><div l=26><span class='TxtNegro'>    <span class='TxtAzul'>else</span> {</span></div><div l=27><span class='TxtNegro'>        <span class='TxtVerde'>// (RC.right - 4)           = Ancho utilizable en pixeles del control</span></span></div><div l=28><span class='TxtNegro'>        <span class='TxtVerde'>// (_Maximo - _Minimo)      = Total de valores a recorrer</span></span></div><div l=29><span class='TxtNegro'>        <span class='TxtVerde'>// (Ancho / Total varlores) = Parte por valor</span></span></div><div l=30><span class='TxtNegro'>        <span class='TxtAzul'>float</span> AnchoU = <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>float</span>&gt;(RC.right - <span class='TxtRojo'>4</span>);</span></div><div l=31><span class='TxtNegro'>        TotalValores = (_Maximo - _Minimo);</span></div><div l=32><span class='TxtNegro'></span></div><div l=33><span class='TxtNegro'>        <span class='TxtAzul'>if</span> (TotalValores &gt; AnchoU) Parte = TotalValores / AnchoU;</span></div><div l=34><span class='TxtNegro'>        <span class='TxtAzul'>else</span>                       Parte = AnchoU / TotalValores;</span></div><div l=35><span class='TxtNegro'>        Degradado.right = <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>int</span>&gt;(Parte * (_Valor - _Minimo));</span></div><div l=36><span class='TxtNegro'>    }</span></div><div l=37><span class='TxtNegro'></span></div><div l=38><span class='TxtNegro'>    <span class='TxtVerde'>// 3 - Pintamos el fondo</span></span></div><div l=39><span class='TxtNegro'>    HBRUSH Brocha = CreateSolidBrush(_Color_Fondo);</span></div><div l=40><span class='TxtNegro'>    FillRect(Buffer, &RC, Brocha);</span></div><div l=41><span class='TxtNegro'>    DeleteObject(Brocha);</span></div><div l=42><span class='TxtNegro'></span></div><div l=43><span class='TxtNegro'>    <span class='TxtVerde'>// 4 - Pintamos la barra de progreso con un degradado</span></span></div><div l=44><span class='TxtNegro'>    TRIVERTEX     GCVertex[<span class='TxtRojo'>2</span>]; </span></div><div l=45><span class='TxtNegro'>    GRADIENT_RECT tGRect; </span></div><div l=46><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>0</span>].Red     = RGB_OBTENER_R(_Color_DegradadoSuperior); </span></div><div l=47><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>0</span>].Green   = RGB_OBTENER_G(_Color_DegradadoSuperior);</span></div><div l=48><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>0</span>].Blue    = RGB_OBTENER_B(_Color_DegradadoSuperior);</span></div><div l=49><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>0</span>].x       = Degradado.left; </span></div><div l=50><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>0</span>].y       = Degradado.top; </span></div><div l=51><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>1</span>].Red     = RGB_OBTENER_R(_Color_DegradadoInferior);</span></div><div l=52><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>1</span>].Green   = RGB_OBTENER_G(_Color_DegradadoInferior);</span></div><div l=53><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>1</span>].Blue    = RGB_OBTENER_B(_Color_DegradadoInferior);</span></div><div l=54><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>1</span>].x       = Degradado.right + <span class='TxtRojo'>2</span>; </span></div><div l=55><span class='TxtNegro'>    GCVertex[<span class='TxtRojo'>1</span>].y        = Degradado.bottom + <span class='TxtRojo'>2</span>;</span></div><div l=56><span class='TxtNegro'>    tGRect.UpperLeft = <span class='TxtRojo'>0</span>;  </span></div><div l=57><span class='TxtNegro'>    tGRect.LowerRight = <span class='TxtRojo'>1</span>; </span></div><div l=58><span class='TxtNegro'>    GradientFill(Buffer, GCVertex, <span class='TxtRojo'>2</span>, &tGRect, <span class='TxtRojo'>1</span>, (EsVertical) ? GRADIENT_FILL_RECT_H : GRADIENT_FILL_RECT_V);  </span></div><div l=59><span class='TxtNegro'></span></div><div l=60><span class='TxtNegro'>    <span class='TxtVerde'>// 5 - Pintamos el borde</span></span></div><div l=61><span class='TxtNegro'>    Brocha = CreateSolidBrush(_Color_BordeInterno);</span></div><div l=62><span class='TxtNegro'>    FrameRgn(Buffer, Region, Brocha, <span class='TxtRojo'>2</span>, <span class='TxtRojo'>2</span>);</span></div><div l=63><span class='TxtNegro'>    DeleteObject(Brocha);</span></div><div l=64><span class='TxtNegro'>    Brocha = CreateSolidBrush(_Color_BordeExterno);</span></div><div l=65><span class='TxtNegro'>    FrameRgn(Buffer, Region, Brocha, <span class='TxtRojo'>1</span>, <span class='TxtRojo'>1</span>);</span></div><div l=66><span class='TxtNegro'>    DeleteObject(Brocha);</span></div><div l=67><span class='TxtNegro'></span></div><div l=68><span class='TxtNegro'>    <span class='TxtVerde'>// 6 - Pintamos el Buffer en el DC de la barra de progreso</span></span></div><div l=69><span class='TxtNegro'>    BitBlt(hDC, <span class='TxtRojo'>0</span>, <span class='TxtRojo'>0</span>, RC.right, RC.bottom, Buffer, <span class='TxtRojo'>0</span>, <span class='TxtRojo'>0</span>, SRCCOPY);</span></div><div l=70><span class='TxtNegro'></span></div><div l=71><span class='TxtNegro'>    <span class='TxtVerde'>// 7 - Selecciono los objetos originales del Buffer y elimino objetos gdi de la memoria</span></span></div><div l=72><span class='TxtNegro'>    SelectObject(Buffer, VFuente);</span></div><div l=73><span class='TxtNegro'>    SelectObject(Buffer, Viejo);</span></div><div l=74><span class='TxtNegro'>    DeleteObject(Region);</span></div><div l=75><span class='TxtNegro'>    DeleteObject(Bmp);</span></div><div l=76><span class='TxtNegro'>    DeleteDC(Buffer);</span></div><div l=77><span class='TxtNegro'></span></div><div l=78><span class='TxtNegro'>    <span class='TxtAzul'>return</span> <span class='TxtRojo'>0</span>;</span></div><div l=79><span class='TxtNegro'>}</span></div></pre></div>