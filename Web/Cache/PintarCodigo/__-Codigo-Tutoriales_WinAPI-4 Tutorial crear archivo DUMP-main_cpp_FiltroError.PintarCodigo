<div class='Codigo_Marco' id='IDFiltroError'><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'>LONG WINAPI FiltroError(<span class='TxtAzul'>struct</span> _EXCEPTION_POINTERS* ExceptionInfo) {</span></div><div l=2><span class='TxtNegro'>    TCHAR  PathAppData[MAX_PATH];</span></div><div l=3><span class='TxtNegro'>    TCHAR  PathDump[MAX_PATH];</span></div><div l=4><span class='TxtNegro'>    <span class='TxtAzul'>if</span> (ExceptionInfo == NULL) <span class='TxtAzul'>return</span> -<span class='TxtRojo'>1</span>;</span></div><div l=5><span class='TxtNegro'>    <span class='TxtVerde'>// Obtenemos la carpeta APP_DATA donde podemos escribir cosas sin necesidad de permisos de administrador</span></span></div><div l=6><span class='TxtNegro'>    SHGetFolderPath(NULL, CSIDL_COMMON_APPDATA, NULL, <span class='TxtRojo'>0</span>, PathAppData);</span></div><div l=7><span class='TxtNegro'>    swprintf_s(PathDump, MAX_PATH, TEXT(<span class='TxtRojo'>"%s\\DUMP.dmp"</span>), PathAppData);</span></div><div l=8><span class='TxtNegro'>    <span class='TxtVerde'>// Creamos el archivo DUMP.dmp para empezar a escribir los datos</span></span></div><div l=9><span class='TxtNegro'>    HANDLE hFile = CreateFile(PathDump, GENERIC_READ | GENERIC_WRITE, <span class='TxtRojo'>0</span>, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL); </span></div><div l=10><span class='TxtNegro'>    <span class='TxtVerde'>// Si no hay ningún error al crear el archivo..</span></span></div><div l=11><span class='TxtNegro'>    <span class='TxtAzul'>if</span> ((hFile != NULL) && (hFile != INVALID_HANDLE_VALUE))  {</span></div><div l=12><span class='TxtNegro'>        <span class='TxtVerde'>// Rellenamos la estructura con la información de la excepción</span></span></div><div l=13><span class='TxtNegro'>        MINIDUMP_EXCEPTION_INFORMATION mdei; </span></div><div l=14><span class='TxtNegro'>        mdei.ThreadId           = GetCurrentThreadId(); </span></div><div l=15><span class='TxtNegro'>        mdei.ExceptionPointers  = ExceptionInfo; </span></div><div l=16><span class='TxtNegro'>        mdei.ClientPointers     = FALSE; </span></div><div l=17><span class='TxtNegro'>        <span class='TxtVerde'>// Rellenamos la estructura con la información del callback</span></span></div><div l=18><span class='TxtNegro'>        MINIDUMP_CALLBACK_INFORMATION mci; </span></div><div l=19><span class='TxtNegro'>        mci.CallbackRoutine     = NULL; </span></div><div l=20><span class='TxtNegro'>        mci.CallbackParam       = <span class='TxtRojo'>0</span>; </span></div><div l=21><span class='TxtNegro'>        <span class='TxtVerde'>// Creamos una variable con las opciones que se usaran para crear el dump</span></span></div><div l=22><span class='TxtNegro'>        MINIDUMP_TYPE mdt       = (MINIDUMP_TYPE)(MiniDumpWithIndirectlyReferencedMemory | MiniDumpScanMemory | MiniDumpNormal); </span></div><div l=23><span class='TxtNegro'>        <span class='TxtVerde'>// Escribimos el dump en el archivo</span></span></div><div l=24><span class='TxtNegro'>        BOOL rv;</span></div><div l=25><span class='TxtNegro'>        rv = MiniDumpWriteDump(GetCurrentProcess(), GetCurrentProcessId(), hFile, mdt, (ExceptionInfo != <span class='TxtRojo'>0</span>) ? &mdei : <span class='TxtRojo'>0</span>, <span class='TxtRojo'>0</span>, &mci); </span></div><div l=26><span class='TxtNegro'>        <span class='TxtVerde'>// Cerramos el archivo dump</span></span></div><div l=27><span class='TxtNegro'>        CloseHandle(hFile); </span></div><div l=28><span class='TxtNegro'>        <span class='TxtVerde'>// Abrimos la carpeta donde se ha guardado el DUMP.dmp</span></span></div><div l=29><span class='TxtNegro'>        ShellExecute(NULL, TEXT(<span class='TxtRojo'>"open"</span>), PathAppData, TEXT(<span class='TxtRojo'>""</span>), PathAppData, SW_SHOW);</span></div><div l=30><span class='TxtNegro'>    }</span></div><div l=31><span class='TxtNegro'>    <span class='TxtAzul'>return</span> TRUE;</span></div><div l=32><span class='TxtNegro'>}</span></div></pre></div>