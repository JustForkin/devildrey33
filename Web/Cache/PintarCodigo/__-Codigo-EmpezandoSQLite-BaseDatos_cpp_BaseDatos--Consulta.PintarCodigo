<div class='Codigo_Marco' id='BaseDatos_Consulta'><div class='Codigo_Titulo'>BaseDatos::Consulta</div><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'><span class='TxtVerde'>// Funci√≥n para realizar consultas simples que no devuelven datos (CREATE TABLE, INSERT, etc..)</span></span></div><div l=2><span class='TxtNegro'><span class='TxtAzul'>const</span> <span class='TxtAzul'>int</span> BaseDatos::Consulta(<span class='TxtAzul'>const</span> <span class='TxtAzul'>wchar_t</span> *ConsultaSQL) {</span></div><div l=3><span class='TxtNegro'>    <span class='TxtAzul'>int</span>             SqlRet   = <span class='TxtRojo'>0</span>;</span></div><div l=4><span class='TxtNegro'>    sqlite3_stmt   *SqlQuery = NULL;</span></div><div l=5><span class='TxtNegro'>    SqlRet = sqlite3_prepare16_v2(_BD, ConsultaSQL, -<span class='TxtRojo'>1</span>, &SqlQuery, NULL);</span></div><div l=6><span class='TxtNegro'>    <span class='TxtAzul'>if</span> (SqlRet) {</span></div><div l=7><span class='TxtNegro'>        <span class='TxtAzul'>const</span> <span class='TxtAzul'>wchar_t</span> *Error = <span class='TxtAzul'>reinterpret_cast</span>&lt;<span class='TxtAzul'>const</span> <span class='TxtAzul'>wchar_t</span> *&gt;(sqlite3_errmsg16(_BD));</span></div><div l=8><span class='TxtNegro'>        std::wcout &lt;&lt; L<span class='TxtRojo'>"Error: "</span> &lt;&lt; Error &lt;&lt; L<span class='TxtRojo'>"\n"</span>;</span></div><div l=9><span class='TxtNegro'>        <span class='TxtAzul'>return</span> FALSE;</span></div><div l=10><span class='TxtNegro'>    }</span></div><div l=11><span class='TxtNegro'>    <span class='TxtVerde'>// Ejecutamos todos los pasos necesarios para la consulta</span></span></div><div l=12><span class='TxtNegro'>    <span class='TxtAzul'>while</span> (SqlRet != SQLITE_DONE && SqlRet != SQLITE_ERROR) {</span></div><div l=13><span class='TxtNegro'>        SqlRet = sqlite3_step(SqlQuery);</span></div><div l=14><span class='TxtNegro'>    }</span></div><div l=15><span class='TxtNegro'>    sqlite3_finalize(SqlQuery);    </span></div><div l=16><span class='TxtNegro'>    <span class='TxtAzul'>if</span> (SqlRet == SQLITE_ERROR) {</span></div><div l=17><span class='TxtNegro'>        <span class='TxtAzul'>const</span> <span class='TxtAzul'>wchar_t</span> *Error = <span class='TxtAzul'>reinterpret_cast</span>&lt;<span class='TxtAzul'>const</span> <span class='TxtAzul'>wchar_t</span> *&gt;(sqlite3_errmsg16(_BD));</span></div><div l=18><span class='TxtNegro'>        std::wcout &lt;&lt; L<span class='TxtRojo'>"Error: "</span> &lt;&lt; Error &lt;&lt; L<span class='TxtRojo'>"\n"</span>;</span></div><div l=19><span class='TxtNegro'>        <span class='TxtAzul'>return</span> FALSE;    <span class='TxtVerde'>// Error</span></span></div><div l=20><span class='TxtNegro'>    }</span></div><div l=21><span class='TxtNegro'>    <span class='TxtAzul'>return</span> TRUE;</span></div><div l=22><span class='TxtNegro'>}</span></div></pre></div>