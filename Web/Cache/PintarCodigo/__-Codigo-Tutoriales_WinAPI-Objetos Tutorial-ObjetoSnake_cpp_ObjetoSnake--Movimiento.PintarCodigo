<div class='Codigo_Marco' id='IDMovimiento'><div class='Codigo_Titulo'>Archivo : ObjetoSnake.cpp</div><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'><span class='TxtVerde'>// -Funci贸n que hace avanzar la serpiente una posici贸n</span></span></div><div l=2><span class='TxtNegro'><span class='TxtVerde'>//  Tambien comprueba si se ha comido bola en el movimiento, en ese caso agranda la serpiente.</span></span></div><div l=3><span class='TxtNegro'><span class='TxtAzul'>void</span> ObjetoSnake::Movimiento(<span class='TxtAzul'>void</span>) {</span></div><div l=4><span class='TxtNegro'>    size_t i = <span class='TxtRojo'>0</span>;</span></div><div l=5><span class='TxtNegro'>    Marcador-&gt;Recorrido ++;</span></div><div l=6><span class='TxtNegro'>    <span class='TxtAzul'>bool</span> Fin = <span class='TxtAzul'>false</span>;</span></div><div l=7><span class='TxtNegro'>    <span class='TxtVerde'>// 1 Miramos si la cabeza de la serpiente esta encima de una bola</span></span></div><div l=8><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (i = <span class='TxtRojo'>0</span>; i &lt; Tablero-&gt;Bolas.size(); i++) {</span></div><div l=9><span class='TxtNegro'>        <span class='TxtAzul'>if</span> (Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x == Tablero-&gt;Bolas[i].x && Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y == Tablero-&gt;Bolas[i].y) {</span></div><div l=10><span class='TxtNegro'>            <span class='TxtVerde'>// Se ha comido la bola, creamos una nueva bola, ampliamos la puntuaci贸n y subimos la velocidad.</span></span></div><div l=11><span class='TxtNegro'>            Marcador-&gt;Puntuacion ++;</span></div><div l=12><span class='TxtNegro'>            Tablero-&gt;Serpiente.push_back(Tablero-&gt;Serpiente[Tablero-&gt;Serpiente.size() -<span class='TxtRojo'>1</span>]);</span></div><div l=13><span class='TxtNegro'>            <span class='TxtAzul'>if</span> (Marcador-&gt;Velocidad &gt; <span class='TxtRojo'>4</span>) Marcador-&gt;Velocidad -= Nivel.AmpliacionVelocidad;</span></div><div l=14><span class='TxtNegro'>            Tablero-&gt;Bolas[i] = BolaAleatoria();</span></div><div l=15><span class='TxtNegro'>        }</span></div><div l=16><span class='TxtNegro'>    }</span></div><div l=17><span class='TxtNegro'></span></div><div l=18><span class='TxtNegro'>    <span class='TxtVerde'>// 2.1 Miramos si la cabeza de la serpiente ha chocado con el resto de la serpiente</span></span></div><div l=19><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (i = <span class='TxtRojo'>2</span>; i &lt; Tablero-&gt;Serpiente.size(); i++) {</span></div><div l=20><span class='TxtNegro'>        <span class='TxtAzul'>if</span> (Tablero-&gt;Serpiente[i].x == Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x && Tablero-&gt;Serpiente[i].y == Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y) {</span></div><div l=21><span class='TxtNegro'>            Fin = <span class='TxtAzul'>true</span>;</span></div><div l=22><span class='TxtNegro'>            <span class='TxtAzul'>break</span>;</span></div><div l=23><span class='TxtNegro'>        }</span></div><div l=24><span class='TxtNegro'>    }</span></div><div l=25><span class='TxtNegro'>    <span class='TxtVerde'>// 2.2 Miramos si la cabeza de la serpiente ha chocado con el muro</span></span></div><div l=26><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (i = <span class='TxtRojo'>0</span>; i &lt; Tablero-&gt;Muro.size(); i++) {</span></div><div l=27><span class='TxtNegro'>        <span class='TxtAzul'>if</span> (Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x == Tablero-&gt;Muro[i].x && Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y == Tablero-&gt;Muro[i].y) {</span></div><div l=28><span class='TxtNegro'>            Fin = <span class='TxtAzul'>true</span>;</span></div><div l=29><span class='TxtNegro'>            <span class='TxtAzul'>break</span>;</span></div><div l=30><span class='TxtNegro'>        }</span></div><div l=31><span class='TxtNegro'>    }</span></div><div l=32><span class='TxtNegro'></span></div><div l=33><span class='TxtNegro'>    <span class='TxtVerde'>// 3 FINAL DEL NIVEL</span></span></div><div l=34><span class='TxtNegro'>    <span class='TxtAzul'>if</span> (Fin == <span class='TxtAzul'>true</span>) {</span></div><div l=35><span class='TxtNegro'>        <span class='TxtVerde'>// Se ha terminado el nivel</span></span></div><div l=36><span class='TxtNegro'>        <span class='TxtAzul'>if</span> (Nivel.PuntosParaPasar &gt;= Marcador-&gt;Puntuacion) { <span class='TxtVerde'>// Puntuacion insuficiente</span></span></div><div l=37><span class='TxtNegro'>            <span class='TxtAzul'>if</span> (Records-&gt;MostrarRecords(Marcador-&gt;Puntuacion, Marcador-&gt;Recorrido, NivelActual) == TRUE) </span></div><div l=38><span class='TxtNegro'>                Estado = EnRecords_NuevoRecord;</span></div><div l=39><span class='TxtNegro'>            else</span></div><div l=40><span class='TxtNegro'>                Estado = EnRecords;</span></div><div l=41><span class='TxtNegro'>        }</span></div><div l=42><span class='TxtNegro'>        <span class='TxtAzul'>else</span> { <span class='TxtVerde'>// La puntuacion es valida, miramos si existe otro nivel superior</span></span></div><div l=43><span class='TxtNegro'>            <span class='TxtAzul'>if</span> (CargarNivel(NivelActual +<span class='TxtRojo'>1</span>) == TRUE) {</span></div><div l=44><span class='TxtNegro'>                NivelActual ++;</span></div><div l=45><span class='TxtNegro'>                Estado = EnSiguienteNivel;</span></div><div l=46><span class='TxtNegro'>                Mensaje-&gt;MostrarMensaje(TEXT(<span class='TxtRojo'>"Presiona ESPACIO para continuar."</span>));</span></div><div l=47><span class='TxtNegro'>            }</span></div><div l=48><span class='TxtNegro'>            <span class='TxtAzul'>else</span> { <span class='TxtVerde'>// No hay mas niveles</span></span></div><div l=49><span class='TxtNegro'>                <span class='TxtAzul'>if</span> (Records-&gt;MostrarRecords(Marcador-&gt;Puntuacion, Marcador-&gt;Recorrido, NivelActual) == TRUE) </span></div><div l=50><span class='TxtNegro'>                    Estado = EnRecords_NuevoRecord;</span></div><div l=51><span class='TxtNegro'>                else</span></div><div l=52><span class='TxtNegro'>                    Estado = EnRecords;</span></div><div l=53><span class='TxtNegro'>            }</span></div><div l=54><span class='TxtNegro'>        }</span></div><div l=55><span class='TxtNegro'>        <span class='TxtAzul'>return</span>;</span></div><div l=56><span class='TxtNegro'>    }</span></div><div l=57><span class='TxtNegro'></span></div><div l=58><span class='TxtNegro'>    <span class='TxtVerde'>// 4 Desplazamos la serpiente</span></span></div><div l=59><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (i = Tablero-&gt;Serpiente.size() -<span class='TxtRojo'>1</span>; i &gt; <span class='TxtRojo'>0</span>; i--) {</span></div><div l=60><span class='TxtNegro'>        Tablero-&gt;Serpiente[i] = Tablero-&gt;Serpiente[i - <span class='TxtRojo'>1</span>];</span></div><div l=61><span class='TxtNegro'>    }</span></div><div l=62><span class='TxtNegro'></span></div><div l=63><span class='TxtNegro'>    <span class='TxtVerde'>// 5 Miramos la nueva direcci贸n de la serpiente</span></span></div><div l=64><span class='TxtNegro'>    <span class='TxtAzul'>switch</span> (Direccion) {</span></div><div l=65><span class='TxtNegro'>        <span class='TxtAzul'>case</span> <span class='TxtRojo'>4</span> : <span class='TxtVerde'>// Izquierda</span></span></div><div l=66><span class='TxtNegro'>            <span class='TxtAzul'>if</span> (Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x &gt; <span class='TxtRojo'>1</span>)                                    Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x --;</span></div><div l=67><span class='TxtNegro'>            <span class='TxtAzul'>else</span>                                                                Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x = Nivel.AnchoTablero;</span></div><div l=68><span class='TxtNegro'>            <span class='TxtAzul'>break</span>;</span></div><div l=69><span class='TxtNegro'>        <span class='TxtAzul'>case</span> <span class='TxtRojo'>6</span> : <span class='TxtVerde'>// Derecha</span></span></div><div l=70><span class='TxtNegro'>            <span class='TxtAzul'>if</span> (Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x &lt; <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>int</span>&gt;(Nivel.AnchoTablero)) Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x ++;</span></div><div l=71><span class='TxtNegro'>            <span class='TxtAzul'>else</span>                                                                Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].x = <span class='TxtRojo'>1</span>;</span></div><div l=72><span class='TxtNegro'>            <span class='TxtAzul'>break</span>;</span></div><div l=73><span class='TxtNegro'>        <span class='TxtAzul'>case</span> <span class='TxtRojo'>8</span> : <span class='TxtVerde'>// Arriba</span></span></div><div l=74><span class='TxtNegro'>            <span class='TxtAzul'>if</span> (Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y &gt; <span class='TxtRojo'>1</span>)                                    Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y --;</span></div><div l=75><span class='TxtNegro'>            <span class='TxtAzul'>else</span>                                                                Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y = Nivel.AltoTablero;</span></div><div l=76><span class='TxtNegro'>            <span class='TxtAzul'>break</span>;</span></div><div l=77><span class='TxtNegro'>        <span class='TxtAzul'>case</span> <span class='TxtRojo'>2</span> : <span class='TxtVerde'>// Abajo</span></span></div><div l=78><span class='TxtNegro'>            <span class='TxtAzul'>if</span> (Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y &lt; <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>int</span>&gt;(Nivel.AltoTablero))  Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y ++;</span></div><div l=79><span class='TxtNegro'>            <span class='TxtAzul'>else</span>                                                                Tablero-&gt;Serpiente[<span class='TxtRojo'>0</span>].y = <span class='TxtRojo'>1</span>;</span></div><div l=80><span class='TxtNegro'>            <span class='TxtAzul'>break</span>;</span></div><div l=81><span class='TxtNegro'>    }</span></div><div l=82><span class='TxtNegro'>}</span></div></pre></div>