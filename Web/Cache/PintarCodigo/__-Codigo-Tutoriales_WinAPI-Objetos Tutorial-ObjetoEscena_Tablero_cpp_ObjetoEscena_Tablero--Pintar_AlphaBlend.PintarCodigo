<div class='Codigo_Marco' id='IDPintar_AlphaBlend'><div class='Codigo_Titulo'>Archivo : ObjetoEscena_Tablero.cpp</div><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'><span class='TxtVerde'>// Esta funci√≥n se usara para pintar los graficos que se necesiten con AlphaBlend</span></span></div><div l=2><span class='TxtNegro'><span class='TxtVerde'>// NOTA el hDCDestino es un backbuffer creado por la funcion Pintar, por ello no hace falta crear otro buffer de pintado.</span></span></div><div l=3><span class='TxtNegro'><span class='TxtAzul'>void</span> ObjetoEscena_Tablero::Pintar_AlphaBlend(HDC hDCDestino) {</span></div><div l=4><span class='TxtNegro'>    UINT nx = <span class='TxtRojo'>0</span>;</span></div><div l=5><span class='TxtNegro'>    UINT ny = <span class='TxtRojo'>0</span>;</span></div><div l=6><span class='TxtNegro'></span></div><div l=7><span class='TxtNegro'>    <span class='TxtVerde'>// Pinto el fondo por donde se movera la serpiente con una tonalidad de azul distinta</span></span></div><div l=8><span class='TxtNegro'>    RECT EspacioTablero = { <span class='TxtRojo'>11</span>, <span class='TxtRojo'>11</span>, (Espacio.right - Espacio.left) - <span class='TxtRojo'>10</span>, (Espacio.bottom - Espacio.top) - <span class='TxtRojo'>10</span> };</span></div><div l=9><span class='TxtNegro'>    HBRUSH Brocha = CreateSolidBrush(RGB(<span class='TxtRojo'>40</span>, <span class='TxtRojo'>40</span>, <span class='TxtRojo'>140</span>));</span></div><div l=10><span class='TxtNegro'>    FillRect(hDCDestino, &EspacioTablero, Brocha);</span></div><div l=11><span class='TxtNegro'>    </span></div><div l=12><span class='TxtNegro'>    <span class='TxtVerde'>// Pinto lineas para formar una rejilla dentro del espacio donde se movera la serpiente</span></span></div><div l=13><span class='TxtNegro'>    HPEN Pluma = CreatePen(PS_SOLID, <span class='TxtRojo'>1</span>, RGB(<span class='TxtRojo'>120</span>, <span class='TxtRojo'>120</span>, <span class='TxtRojo'>220</span>));</span></div><div l=14><span class='TxtNegro'>    HPEN Viejo = <span class='TxtAzul'>static_cast</span>&lt;HPEN&gt;(SelectObject(hDCDestino, Pluma));</span></div><div l=15><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (ny = <span class='TxtRojo'>1</span>; ny &lt; Alto; ny ++) {</span></div><div l=16><span class='TxtNegro'>        MoveToEx(hDCDestino, <span class='TxtRojo'>11</span>, ny * <span class='TxtRojo'>10</span>, NULL);</span></div><div l=17><span class='TxtNegro'>        LineTo(hDCDestino, (Alto * <span class='TxtRojo'>10</span>) - <span class='TxtRojo'>10</span>, ny * <span class='TxtRojo'>10</span>);</span></div><div l=18><span class='TxtNegro'>    }</span></div><div l=19><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (nx = <span class='TxtRojo'>1</span>; nx &lt; Ancho; nx ++) {</span></div><div l=20><span class='TxtNegro'>        MoveToEx(hDCDestino, nx * <span class='TxtRojo'>10</span>, <span class='TxtRojo'>11</span>, NULL);</span></div><div l=21><span class='TxtNegro'>        LineTo(hDCDestino, nx * <span class='TxtRojo'>10</span>, (Ancho * <span class='TxtRojo'>10</span>) - <span class='TxtRojo'>10</span>);</span></div><div l=22><span class='TxtNegro'>    }</span></div><div l=23><span class='TxtNegro'>    <span class='TxtVerde'>// Elimino objetos GDI de la memoria</span></span></div><div l=24><span class='TxtNegro'>    DeleteObject(Brocha);</span></div><div l=25><span class='TxtNegro'>    SelectObject(hDCDestino, Viejo);</span></div><div l=26><span class='TxtNegro'>    DeleteObject(Pluma);</span></div><div l=27><span class='TxtNegro'>}</span></div></pre></div>