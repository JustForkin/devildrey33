<div class='Codigo_Marco' id='IDObjetoArchivo'><div class='Codigo_Titulo'>Archivo : ObjetoArchivo.h</div><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'><span class='TxtVerde'>// Clase que encapsula las funciones necesarias para abrir-cerrar y leer-escribir archivos</span></span></div><div l=2><span class='TxtNegro'><span class='TxtAzul'>class</span> ObjetoArchivo {</span></div><div l=3><span class='TxtNegro'> <span class='TxtAzul'>public</span> : <span class='TxtVerde'>//////////////////////////// Miembros publicos</span></span></div><div l=4><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Constructor</span></span></div><div l=5><span class='TxtNegro'>                                    ObjetoArchivo(<span class='TxtAzul'>void</span>);</span></div><div l=6><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Destructor</span></span></div><div l=7><span class='TxtNegro'>                                   ~ObjetoArchivo(<span class='TxtAzul'>void</span>);</span></div><div l=8><span class='TxtNegro'></span></div><div l=9><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para abrir un archivo (lectura / escritura)</span></span></div><div l=10><span class='TxtNegro'>  BOOL                              AbrirArchivo(<span class='TxtAzul'>const</span> TCHAR *Path, <span class='TxtAzul'>const</span> <span class='TxtAzul'>bool</span> Abrir_si_no_existe = <span class='TxtAzul'>false</span>);</span></div><div l=11><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para abrir un archivo</span></span></div><div l=12><span class='TxtNegro'>  BOOL                              AbrirArchivoLectura(<span class='TxtAzul'>const</span> TCHAR *Path);</span></div><div l=13><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para abrir un archivo</span></span></div><div l=14><span class='TxtNegro'>  BOOL                              AbrirArchivoEscritura(<span class='TxtAzul'>const</span> TCHAR *Path, <span class='TxtAzul'>const</span> <span class='TxtAzul'>bool</span> Abrir_si_no_existe = <span class='TxtAzul'>true</span>);</span></div><div l=15><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para cerrar el archivo</span></span></div><div l=16><span class='TxtNegro'>  BOOL                                CerrarArchivo(<span class='TxtAzul'>void</span>);</span></div><div l=17><span class='TxtNegro'></span></div><div l=18><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para leer datos del archivo</span></span></div><div l=19><span class='TxtNegro'>  BOOL                              Leer(LPVOID, <span class='TxtAzul'>const</span> size_t NumBytes);</span></div><div l=20><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para guardar datos en el archivo</span></span></div><div l=21><span class='TxtNegro'>  BOOL                                Guardar(LPCVOID Buffer, <span class='TxtAzul'>const</span> size_t NumBytes);</span></div><div l=22><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función que lee un string previamente guardado con GuardarString</span></span></div><div l=23><span class='TxtNegro'>                                    <span class='TxtVerde'>//   Hay que pasarle un puntero NULL en el que se creara el string.</span></span></div><div l=24><span class='TxtNegro'>                                    <span class='TxtVerde'>//   Una vez no necesites mas el string deberas borrarlo con delete.</span></span></div><div l=25><span class='TxtNegro'>  BOOL                              LeerString(PTCHAR &nStr);</span></div><div l=26><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función que guarda un string terminado con '\0'</span></span></div><div l=27><span class='TxtNegro'>  BOOL                              GuardarString(<span class='TxtAzul'>const</span> TCHAR *Str);</span></div><div l=28><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función que lee un UINT</span></span></div><div l=29><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> BOOL                       LeerUINT(UINT &Valor) {</span></div><div l=30><span class='TxtNegro'>                                        <span class='TxtAzul'>return</span> Leer(&Valor, <span class='TxtAzul'>sizeof</span>(UINT));</span></div><div l=31><span class='TxtNegro'>                                    };</span></div><div l=32><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función que guarda un UINT</span></span></div><div l=33><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> BOOL                       GuardarUINT(<span class='TxtAzul'>const</span> UINT Valor) {</span></div><div l=34><span class='TxtNegro'>                                        <span class='TxtAzul'>return</span> Guardar(&Valor, <span class='TxtAzul'>sizeof</span>(UINT));</span></div><div l=35><span class='TxtNegro'>                                    };</span></div><div l=36><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función que lee un UINT</span></span></div><div l=37><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> BOOL                       LeerDWORD(DWORD &Valor) {</span></div><div l=38><span class='TxtNegro'>                                        <span class='TxtAzul'>return</span> Leer(&Valor, <span class='TxtAzul'>sizeof</span>(DWORD));</span></div><div l=39><span class='TxtNegro'>                                    };</span></div><div l=40><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función que guarda un DWORD</span></span></div><div l=41><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> BOOL                       GuardarDWORD(<span class='TxtAzul'>const</span> DWORD Valor) {</span></div><div l=42><span class='TxtNegro'>                                        <span class='TxtAzul'>return</span> Guardar(&Valor, <span class='TxtAzul'>sizeof</span>(DWORD));</span></div><div l=43><span class='TxtNegro'>                                    };</span></div><div l=44><span class='TxtNegro'></span></div><div l=45><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para saber si el archivo esta abierto</span></span></div><div l=46><span class='TxtNegro'>  <span class='TxtAzul'>bool</span>                                EstaAbierto(<span class='TxtAzul'>void</span>);</span></div><div l=47><span class='TxtNegro'>                                    <span class='TxtVerde'>// -Función para obtener la longitud del archivo (limitada a valores de 32 bits)</span></span></div><div l=48><span class='TxtNegro'>                                    <span class='TxtVerde'>//  Si el archivo es muy grande puedes usar ValorAlto para almacenar el HIDWORD,</span></span></div><div l=49><span class='TxtNegro'>                                    <span class='TxtVerde'>//  el valor de retorno siempre sera el LODWORD</span></span></div><div l=50><span class='TxtNegro'>  DWORD                             ObtenerLongitud32(DWORD *ValorAlto = NULL);</span></div><div l=51><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para obtener la longitud del archivo en formato 64 bits</span></span></div><div l=52><span class='TxtNegro'>  LARGE_INTEGER                     ObtenerLongitud64(<span class='TxtAzul'>void</span>);</span></div><div l=53><span class='TxtNegro'></span></div><div l=54><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función que nos dice si se ha llegado al final del archivo con la función Leer</span></span></div><div l=55><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> <span class='TxtAzul'>bool</span>                        FinalDelArchivo(<span class='TxtAzul'>void</span>) <span class='TxtAzul'>const</span> {</span></div><div l=56><span class='TxtNegro'>                                        <span class='TxtAzul'>return</span> _FinalDelArchivo;</span></div><div l=57><span class='TxtNegro'>                                    }</span></div><div l=58><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Función para posicionar el cursor dentro del archivo</span></span></div><div l=59><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> ULONG                        Posicion(<span class='TxtAzul'>const</span> <span class='TxtAzul'>long</span> Pos, <span class='TxtAzul'>const</span> <span class='TxtAzul'>bool</span> Desde_El_Final = <span class='TxtAzul'>false</span>) {</span></div><div l=60><span class='TxtNegro'>                                        <span class='TxtAzul'>if</span> (Desde_El_Final == <span class='TxtAzul'>false</span>)    <span class='TxtAzul'>return</span> SetFilePointer(_Archivo, Pos, NULL, FILE_BEGIN);</span></div><div l=61><span class='TxtNegro'>                                        <span class='TxtAzul'>else</span>                            <span class='TxtAzul'>return</span> SetFilePointer(_Archivo, Pos, NULL, FILE_END);</span></div><div l=62><span class='TxtNegro'>                                    };</span></div><div l=63><span class='TxtNegro'></span></div><div l=64><span class='TxtNegro'> <span class='TxtAzul'>protected</span> : <span class='TxtVerde'>///////////////////////// Miembros protegidos</span></span></div><div l=65><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Miembro que contiene la ID del archivo.</span></span></div><div l=66><span class='TxtNegro'>  HANDLE                           _Archivo;</span></div><div l=67><span class='TxtNegro'>                                    <span class='TxtVerde'>// - Miembro que indica si se ha llegado al final del archivo con la función Leer</span></span></div><div l=68><span class='TxtNegro'>  <span class='TxtAzul'>bool</span>                             _FinalDelArchivo;</span></div><div l=69><span class='TxtNegro'>};</span></div></pre></div>