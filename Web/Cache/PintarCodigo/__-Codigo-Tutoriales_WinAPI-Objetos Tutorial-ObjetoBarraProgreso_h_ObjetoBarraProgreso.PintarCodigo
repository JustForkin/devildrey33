<div class='Codigo_Marco' id='IDObjetoBarraProgreso'><div class='Codigo_Titulo'>Archivo : ObjetoBarraProgreso.h</div><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'><span class='TxtVerde'>// Clase que hereda ObjetoControl y se centra en las funciones </span></span></div><div l=2><span class='TxtNegro'><span class='TxtVerde'>// de la clase ObjetoBarraProgreso</span></span></div><div l=3><span class='TxtNegro'><span class='TxtAzul'>class</span> ObjetoBarraProgreso : <span class='TxtAzul'>public</span> ObjetoControl { </span></div><div l=4><span class='TxtNegro'> <span class='TxtAzul'>public</span> : <span class='TxtVerde'>//////// Miembros publicos</span></span></div><div l=5><span class='TxtNegro'>                <span class='TxtVerde'>// -Constructor</span></span></div><div l=6><span class='TxtNegro'>                ObjetoBarraProgreso(<span class='TxtAzul'>void</span>);</span></div><div l=7><span class='TxtNegro'>                <span class='TxtVerde'>// -Destructor</span></span></div><div l=8><span class='TxtNegro'>               ~ObjetoBarraProgreso(<span class='TxtAzul'>void</span>);</span></div><div l=9><span class='TxtNegro'>                <span class='TxtVerde'>// -Función para crear la progressbar</span></span></div><div l=10><span class='TxtNegro'>  HWND          CrearBarraProgreso( HWND hWndParent, <span class='TxtAzul'>const</span> UINT nID,</span></div><div l=11><span class='TxtNegro'>                                    <span class='TxtVerde'>// Posición y tamaño</span></span></div><div l=12><span class='TxtNegro'>                                    <span class='TxtAzul'>const</span> <span class='TxtAzul'>int</span> cX, <span class='TxtAzul'>const</span> <span class='TxtAzul'>int</span> cY, </span></div><div l=13><span class='TxtNegro'>                                    <span class='TxtAzul'>const</span> <span class='TxtAzul'>int</span> cAncho, <span class='TxtAzul'>const</span> <span class='TxtAzul'>int</span> cAlto, </span></div><div l=14><span class='TxtNegro'>                                    <span class='TxtVerde'>// Valores y colores por defecto </span></span></div><div l=15><span class='TxtNegro'>                                    <span class='TxtAzul'>const</span> <span class='TxtAzul'>float</span> nMin = <span class='TxtRojo'>0</span>.<span class='TxtRojo'>0</span>f, <span class='TxtAzul'>const</span> <span class='TxtAzul'>float</span> nMax = <span class='TxtRojo'>100</span>.<span class='TxtRojo'>0</span>f, </span></div><div l=16><span class='TxtNegro'>                                    <span class='TxtAzul'>const</span> <span class='TxtAzul'>float</span> nValor = <span class='TxtRojo'>0</span>.<span class='TxtRojo'>0</span>f,</span></div><div l=17><span class='TxtNegro'>                                    COLORREF ColorDegradadoSuperior= RGB(<span class='TxtRojo'>200</span>, <span class='TxtRojo'>200</span>, <span class='TxtRojo'>200</span>),</span></div><div l=18><span class='TxtNegro'>                                    COLORREF ColorDegradadoInferior= RGB(<span class='TxtRojo'>100</span>, <span class='TxtRojo'>100</span>, <span class='TxtRojo'>100</span>),</span></div><div l=19><span class='TxtNegro'>                                    COLORREF ColorBordeExterno = RGB(<span class='TxtRojo'>128</span>, <span class='TxtRojo'>128</span>, <span class='TxtRojo'>128</span>),</span></div><div l=20><span class='TxtNegro'>                                    COLORREF ColorBordeInterno = RGB(<span class='TxtRojo'>192</span>, <span class='TxtRojo'>192</span>, <span class='TxtRojo'>192</span>), </span></div><div l=21><span class='TxtNegro'>                                    COLORREF ColorFondo = RGB(<span class='TxtRojo'>220</span>, <span class='TxtRojo'>220</span>, <span class='TxtRojo'>220</span>) </span></div><div l=22><span class='TxtNegro'>                                    <span class='TxtVerde'>/* FIN declaración CrearBarraProgreso */</span> ); </span></div><div l=23><span class='TxtNegro'>                <span class='TxtVerde'>// -Función para asignar el minimo de la progressbar</span></span></div><div l=24><span class='TxtNegro'>  <span class='TxtAzul'>void</span>          Minimo(<span class='TxtAzul'>const</span> <span class='TxtAzul'>float</span> nMinimo, <span class='TxtAzul'>const</span> <span class='TxtAzul'>bool</span> nRepintar = <span class='TxtAzul'>false</span>);</span></div><div l=25><span class='TxtNegro'>                <span class='TxtVerde'>// -Función para obtener el minimo de la progressbar</span></span></div><div l=26><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> <span class='TxtAzul'>float</span>  Minimo(<span class='TxtAzul'>void</span>) <span class='TxtAzul'>const</span> { <span class='TxtAzul'>return</span> _Minimo; };</span></div><div l=27><span class='TxtNegro'>                <span class='TxtVerde'>// -Función para asignar el maximo de la progressbar</span></span></div><div l=28><span class='TxtNegro'>  <span class='TxtAzul'>void</span>          Maximo(<span class='TxtAzul'>const</span> <span class='TxtAzul'>float</span> nMaximo, <span class='TxtAzul'>const</span> <span class='TxtAzul'>bool</span> nRepintar = <span class='TxtAzul'>false</span>);</span></div><div l=29><span class='TxtNegro'>                <span class='TxtVerde'>// -Función para obtener el maximo de la progressbar</span></span></div><div l=30><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> <span class='TxtAzul'>float</span>  Maximo(<span class='TxtAzul'>void</span>) <span class='TxtAzul'>const</span> { <span class='TxtAzul'>return</span> _Maximo; };</span></div><div l=31><span class='TxtNegro'>                <span class='TxtVerde'>// -Función para asignar el valor de la progressbar</span></span></div><div l=32><span class='TxtNegro'>  <span class='TxtAzul'>void</span>          Valor(<span class='TxtAzul'>const</span> <span class='TxtAzul'>float</span> nValor, <span class='TxtAzul'>const</span> <span class='TxtAzul'>bool</span> nRepintar = <span class='TxtAzul'>true</span>);</span></div><div l=33><span class='TxtNegro'>                <span class='TxtVerde'>// -Función para obtener el valor de la progressbar </span></span></div><div l=34><span class='TxtNegro'>                <span class='TxtVerde'>//  (ojo que devuelve UINT)</span></span></div><div l=35><span class='TxtNegro'>  <span class='TxtAzul'>inline</span> <span class='TxtAzul'>float</span>  Valor(<span class='TxtAzul'>void</span>) <span class='TxtAzul'>const</span> { <span class='TxtAzul'>return</span> _Valor; };</span></div><div l=36><span class='TxtNegro'>                <span class='TxtVerde'>// -Función que repinta el control</span></span></div><div l=37><span class='TxtNegro'>  <span class='TxtAzul'>void</span>          Repintar(<span class='TxtAzul'>void</span>);</span></div><div l=38><span class='TxtNegro'>                <span class='TxtVerde'>// -Función que pinta el control</span></span></div><div l=39><span class='TxtNegro'>  LRESULT       Evento_Pintar(HDC hDC, PAINTSTRUCT &PS);</span></div><div l=40><span class='TxtNegro'>  <span class='TxtVerde'>//////////////// Colores</span></span></div><div l=41><span class='TxtNegro'>                <span class='TxtVerde'>// -Macro que crea funciones para asignar y obtener </span></span></div><div l=42><span class='TxtNegro'>                <span class='TxtVerde'>//  el COLORREF _Color_DegradadoSuperior</span></span></div><div l=43><span class='TxtNegro'>                AGREGAR_COLOR(Color_DegradadoSuperior);</span></div><div l=44><span class='TxtNegro'>                <span class='TxtVerde'>// -Macro que crea funciones para asignar y obtener </span></span></div><div l=45><span class='TxtNegro'>                <span class='TxtVerde'>//  el COLORREF _Color_DegradadoInferior</span></span></div><div l=46><span class='TxtNegro'>                AGREGAR_COLOR(Color_DegradadoInferior);</span></div><div l=47><span class='TxtNegro'>                <span class='TxtVerde'>// -Macro que crea funciones para asignar y obtener </span></span></div><div l=48><span class='TxtNegro'>                <span class='TxtVerde'>//  el COLORREF _Color_BordeExterno</span></span></div><div l=49><span class='TxtNegro'>                AGREGAR_COLOR(Color_BordeExterno);</span></div><div l=50><span class='TxtNegro'>                <span class='TxtVerde'>// -Macro que crea funciones para asignar y obtener</span></span></div><div l=51><span class='TxtNegro'>                <span class='TxtVerde'>//  el COLORREF _Color_BordeInterno</span></span></div><div l=52><span class='TxtNegro'>                AGREGAR_COLOR(Color_BordeInterno);</span></div><div l=53><span class='TxtNegro'>                <span class='TxtVerde'>// -Macro que crea funciones para asignar y obtener </span></span></div><div l=54><span class='TxtNegro'>                <span class='TxtVerde'>//  el COLORREF _Color_Fondo</span></span></div><div l=55><span class='TxtNegro'>                AGREGAR_COLOR(Color_Fondo); </span></div><div l=56><span class='TxtNegro'> <span class='TxtAzul'>protected</span> : <span class='TxtVerde'>///// Miembros protegidos</span></span></div><div l=57><span class='TxtNegro'>  <span class='TxtAzul'>float</span>        _Minimo;</span></div><div l=58><span class='TxtNegro'>  <span class='TxtAzul'>float</span>        _Maximo;</span></div><div l=59><span class='TxtNegro'>  <span class='TxtAzul'>float</span>        _Valor;</span></div><div l=60><span class='TxtNegro'></span></div><div l=61><span class='TxtNegro'>};</span></div></pre></div>