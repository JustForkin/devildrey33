<div class='Codigo_Marco' id='IDPintar_Terminado'><div class='Codigo_Titulo'>Archivo : ObjetoEscena_Tablero.cpp</div><div class='Codigo_Numeracion'>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br></div><pre class='Codigo_PRECodigo'><div l=1><span class='TxtNegro'><span class='TxtVerde'>// Esta función se usara para pintar los graficos que se necesiten. (NO SE INCLUIRAN EN EL ALPHABLEND)</span></span></div><div l=2><span class='TxtNegro'><span class='TxtVerde'>// NOTA el hDCDestino es un backbuffer creado por la funcion Pintar, por ello no hace falta crear otro buffer de pintado.</span></span></div><div l=3><span class='TxtNegro'><span class='TxtAzul'>void</span> ObjetoEscena_Tablero::Pintar_Terminado(HDC hDCDestino) {</span></div><div l=4><span class='TxtNegro'>    <span class='TxtAzul'>int</span> i;</span></div><div l=5><span class='TxtNegro'>    RECT EspacioTmp;</span></div><div l=6><span class='TxtNegro'>    <span class='TxtVerde'>// Creación de las brochas necesarias</span></span></div><div l=7><span class='TxtNegro'>    HBRUSH Brocha  = CreateSolidBrush(RGB(<span class='TxtRojo'>0</span>, <span class='TxtRojo'>200</span>, <span class='TxtRojo'>0</span>));</span></div><div l=8><span class='TxtNegro'>    HBRUSH BrochaH = CreateSolidBrush(RGB(<span class='TxtRojo'>0</span>, <span class='TxtRojo'>255</span>, <span class='TxtRojo'>0</span>));</span></div><div l=9><span class='TxtNegro'>    HBRUSH BrochaM = CreateSolidBrush(RGB(<span class='TxtRojo'>100</span>, <span class='TxtRojo'>50</span>, <span class='TxtRojo'>20</span>));</span></div><div l=10><span class='TxtNegro'>    HBRUSH Brocha2 = CreateSolidBrush(RGB(<span class='TxtRojo'>255</span>, <span class='TxtRojo'>0</span>, <span class='TxtRojo'>0</span>));</span></div><div l=11><span class='TxtNegro'></span></div><div l=12><span class='TxtNegro'>    <span class='TxtVerde'>// Pinto los muros</span></span></div><div l=13><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (i = <span class='TxtRojo'>0</span>; i &lt; <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>int</span>&gt;(Muro.size()); i++) {</span></div><div l=14><span class='TxtNegro'>        EspacioTmp.left   = (Muro[i].x * <span class='TxtRojo'>10</span>); </span></div><div l=15><span class='TxtNegro'>        EspacioTmp.top    = (Muro[i].y * <span class='TxtRojo'>10</span>); </span></div><div l=16><span class='TxtNegro'>        EspacioTmp.right  = EspacioTmp.left + <span class='TxtRojo'>11</span>;</span></div><div l=17><span class='TxtNegro'>        EspacioTmp.bottom = EspacioTmp.top + <span class='TxtRojo'>11</span>;</span></div><div l=18><span class='TxtNegro'>        FillRect(hDCDestino, &EspacioTmp, BrochaM);</span></div><div l=19><span class='TxtNegro'>    }</span></div><div l=20><span class='TxtNegro'></span></div><div l=21><span class='TxtNegro'>    <span class='TxtVerde'>// Pinto las bolas</span></span></div><div l=22><span class='TxtNegro'>    HBRUSH VBrocha = <span class='TxtAzul'>static_cast</span>&lt;HBRUSH&gt;(SelectObject(hDCDestino, Brocha2));</span></div><div l=23><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (size_t i2 = <span class='TxtRojo'>0</span>; i2 &lt; Bolas.size(); i2++) {</span></div><div l=24><span class='TxtNegro'>        Ellipse(hDCDestino, (Bolas[i2].x * <span class='TxtRojo'>10</span>) + <span class='TxtRojo'>1</span>, (Bolas[i2].y * <span class='TxtRojo'>10</span>) + <span class='TxtRojo'>1</span>, (Bolas[i2].x * <span class='TxtRojo'>10</span>) + <span class='TxtRojo'>10</span>, (Bolas[i2].y * <span class='TxtRojo'>10</span>) + <span class='TxtRojo'>10</span>);</span></div><div l=25><span class='TxtNegro'>    }</span></div><div l=26><span class='TxtNegro'>    SelectObject(hDCDestino, VBrocha);</span></div><div l=27><span class='TxtNegro'></span></div><div l=28><span class='TxtNegro'>    <span class='TxtVerde'>// Pinto la serpiente</span></span></div><div l=29><span class='TxtNegro'>    <span class='TxtAzul'>for</span> (i = <span class='TxtAzul'>static_cast</span>&lt;<span class='TxtAzul'>int</span>&gt;(Serpiente.size()) -<span class='TxtRojo'>1</span>; i &gt; -<span class='TxtRojo'>1</span>; i--) {</span></div><div l=30><span class='TxtNegro'>        EspacioTmp.left   = (Serpiente[i].x * <span class='TxtRojo'>10</span>) + <span class='TxtRojo'>1</span>; </span></div><div l=31><span class='TxtNegro'>        EspacioTmp.top    = (Serpiente[i].y * <span class='TxtRojo'>10</span>) + <span class='TxtRojo'>1</span>; </span></div><div l=32><span class='TxtNegro'>        EspacioTmp.right  = EspacioTmp.left + <span class='TxtRojo'>9</span>;</span></div><div l=33><span class='TxtNegro'>        EspacioTmp.bottom = EspacioTmp.top + <span class='TxtRojo'>9</span>;</span></div><div l=34><span class='TxtNegro'>        <span class='TxtAzul'>if</span> (i == <span class='TxtRojo'>0</span>) FillRect(hDCDestino, &EspacioTmp, BrochaH);</span></div><div l=35><span class='TxtNegro'>        <span class='TxtAzul'>else</span>        FillRect(hDCDestino, &EspacioTmp, Brocha);</span></div><div l=36><span class='TxtNegro'>    }</span></div><div l=37><span class='TxtNegro'></span></div><div l=38><span class='TxtNegro'>    <span class='TxtVerde'>// Elimino las brochas de la memoria</span></span></div><div l=39><span class='TxtNegro'>    DeleteObject(Brocha);</span></div><div l=40><span class='TxtNegro'>    DeleteObject(Brocha2);</span></div><div l=41><span class='TxtNegro'>    DeleteObject(BrochaH);</span></div><div l=42><span class='TxtNegro'>    DeleteObject(BrochaM);</span></div><div l=43><span class='TxtNegro'>}</span></div></pre></div>